
# non-privilaged user - vagrant
ENV['VAGRANT_DEFAULT_PROVIDER']='vmware_esxi'
BOX_IMAGE = "generic/ubuntu1804"
ESXI_HOST = "10.99.120.228"
ESXI_LOGIN = "root"
ESXI_PASS = "qwerty1@3456"
ESXI_DS = "datastore1"
PROXY = "http://10.4.68.213:3128/"
NO_PROXY = "localhost,127.0.0.1,*.rs.ru"

servers = [
  {
    :name => "master",
    :hostname => "master",
    :type => "master",
    :box => BOX_IMAGE,
    :public_ip => '10.99.120.233',
    :private_ip => '192.168.1.10',
    :networks => ['VM Network', 'VM Network', 'InternalNetwork'],
    :mem => '1024',
    :cpu => '2'
  },
  {
    :name => "node1",
    :hostname => "node1",
    :type => "node",
    :box => BOX_IMAGE,
    :public_ip => '10.99.120.239',
    :private_ip => '192.168.1.11',
    :networks => ['VM Network', 'VM Network', 'InternalNetwork'],
    :mem => '1024',
    :cpu => '2'
  },
  {
    :name => "node2",
    :hostname => "node2",
    :type => "node",
    :box => BOX_IMAGE,
    :public_ip => '10.99.120.242',
    :private_ip => '192.168.1.12',
    :networks => ['VM Network', 'VM Network', 'InternalNetwork'],
    :mem => '1024',
    :cpu => '2'
  }


]

$configureMaster = <<-SCRIPT
  apt-get update
  apt-get install software-properties-common
  apt-add-repository --yes --update ppa:ansible/ansible
  apt-get install --yes ansible
  apt-get install --yes python-apt
SCRIPT
$configureNode = <<-SCRIPT
  apt-get update
  apt-get install --yes python
  apt-get install --yes python-apt
SCRIPT
ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip

Vagrant.configure('2') do |config|
  servers.each do |opts|
    config.vm.define opts[:name] do |config|
      if Vagrant.has_plugin?("vagrant-proxyconf")
        config.proxy.http     = PROXY
        config.proxy.https    = PROXY
        config.proxy.no_proxy = NO_PROXY
      end
      config.vm.box = BOX_IMAGE
      config.vm.hostname = opts[:hostname]
      config.vm.synced_folder('.', '/vagrant', type: 'nfs', disabled: true)
      config.vm.network 'public_network', ip: opts[:public_ip]
      config.vm.network 'private_network', ip: opts[:private_ip]
      config.vm.provider :vmware_esxi do |esxi|
        esxi.guest_name = opts[:name]
        esxi.guest_memsize = opts[:mem]
        esxi.esxi_virtual_network = opts[:networks]
        esxi.esxi_hostname = ESXI_HOST
        esxi.esxi_username = ESXI_LOGIN
        esxi.esxi_password = ESXI_PASS
        esxi.esxi_disk_store = ESXI_DS
        esxi.guest_numvcpus = opts[:cpu]
      end
      #change default route
      config.vm.provision "shell", inline: <<-SHELL
        ip route del default
        ip route add default via 10.99.120.1 dev eth1
      SHELL

      #append host pub key
      config .vm.provision "shell" do |s|    
        s.inline = <<-SHELL
          if grep -sq "#{ssh_pub_key}" /home/vagrant/.ssh/authorized_keys; then
            echo 'SSH keys already provisioned'
          else
            echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
          fi
        SHELL
      end

      #node provision (type depended)
      if opts[:type] == "master"
        config.vm.provision "shell", inline: $configureMaster
#        if needed run playbook
#        config.vm.provision "file", source: "./share_content", destination: "$HOME"
#        config.vm.provision "ansible_local" do |ansible|
#          ansible.provisioning_path = "/home/vagrant"
#          ansible.verbose = "v"
#          ansible.playbook = "playbook.yml"
#        end
      else
        config.vm.provision "shell", inline: $configureNode
      end
    end
  end
end
