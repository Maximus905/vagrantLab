# -*- mode: ruby -*-
# vi: set ft=ruby :

BOX_IMAGE = "generic/ubuntu1804"
servers = [
  {
    :name => "master",
    :hostname => "master",
    :type => "master",
    :box => BOX_IMAGE,
    :public_ip => '192.168.1.60',
    :private_ip => '192.168.10.10',
    :int_network => 'mynetwork',
    :mem => '4096',
    :cpu => '2'
  },
  {
    :name => "node1",
    :hostname => "node1",
    :type => "node",
    :box => BOX_IMAGE,
    :public_ip => '192.168.1.61',
    :private_ip => '192.168.10.11',
    :int_network => 'mynetwork',
    :mem => '1024',
    :cpu => '2'
  },
  {
    :name => "node2",
    :hostname => "node2",
    :type => "node",
    :box => BOX_IMAGE,
    :public_ip => '192.168.1.62',
    :public_ip_mask => '255.255.255.0',
    :private_ip => '192.168.10.12',
    :private_ip_mask => '255.255.255.0',
    :private_network => 'mynetwork',
    :mem => '1024',
    :cpu => '2'
  },
]

ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
$appendHostPubKey = <<-SHELL
  if grep -sq "#{ssh_pub_key}" /home/vagrant/.ssh/authorized_keys;  then
    echo 'SSH keys already provisioned'
  else
    echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
  fi
SHELL

$configureMaster = <<-SCRIPT
apt-get update
apt-get install software-properties-common
apt-get install --yes python-apt
apt-get install --yes python
apt-add-repository --yes --update ppa:ansible/ansible
DEBIAN_FRONTEND=noninteractive apt-get install -y -qq ansible
SCRIPT
$configureNode = <<-SCRIPT
  apt-get update
  apt-get install --yes python
  apt-get install --yes python-apt
SCRIPT
 
Vagrant.configure("2") do |config|
  servers.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.box = BOX_IMAGE
      config.vm.hostname = opts[:hostname]
      config.vm.synced_folder './', '/vagrant_share'
      config.vm.network 'public_network', ip: opts[:public_ip], bridge: "wlx3497f6632b9b"
      config.vm.network 'private_network', ip: opts[:private_ip],
        virtualbox__intnet: opts[:private_network]
      config.vm.provider "virtualbox" do |v|
        v.name = opts[:name]
        v.memory = opts[:mem]
        v.cpus = opts[:cpu]
      end
      #change default route
#      config.vm.provision "shell", inline: <<-SHELL
#        ip route del default
#        ip route add default via 10.99.120.1 dev eth1
#      SHELL

      #append host's public key
      config.vm.provision "shell", inline: $appendHostPubKey
      #node provision (type depended)
      if opts[:type] == "master"
        config.vm.provision "shell", inline: $configureMaster
      else
        config.vm.provision "shell", inline: $configureNode
      end
    end
  end
end
